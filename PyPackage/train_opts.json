{
  "DecoderLayerDepth": 6,
  "DecoderStartLearningRateFactor": 1.0,
  "DecoderType": "Transformer",
  "EnableCoverageModel": false,
  "ExpertNum": 1,
  "ExpertsPerTokenFactor": 1,
  "StartValidAfterUpdates": 1000,
  "IsDecoderTrainable": true,
  "IsSrcEmbeddingTrainable": true,
  "IsTgtEmbeddingTrainable": true,
  "MaxValidSrcSentLength": 110,
  "MaxValidTgtSentLength": 110,
  "MaxSrcSentLength": 110,
  "MaxTgtSentLength": 110,
  "MaxTokenSizePerBatch": 10240,
  "ValMaxTokenSizePerBatch": 10240,
  "SeqGenerationMetric": "BLEU",
  "SharedEmbeddings": false,
  "SrcEmbeddingDim": 512,
  "TgtEmbeddingDim": 512,
  "PointerGenerator": false,
  "BatchSize": 1600,
  "BeamSearchSize": 1,
  "LearningRateStepDownFactor":0.1,
  "UpdateNumToStepDownLearningRate":0,
  "Beta1": 0.9,
  "Beta2": 0.98,
  "CompilerOptions": "--use_fast_math --gpu-architecture=compute_80",
  "AMP": true,
  "ConfigFilePath": "",
  "DecodingStrategy": "GreedySearch",
  "DecodingRepeatPenalty": 2.0,
  "DeviceIds": "0",
  "DropoutRatio": 0.0,
  "EnableSegmentEmbeddings": false,
  "MaxSegmentNum": 16,
  "EncoderLayerDepth": 6,
  "EncoderStartLearningRateFactor": 1.0,
  "EncoderType": "Transformer",
  "GradClip": 5.0,
  "HiddenSize": 512,
  "IsEncoderTrainable": true,
  "MaxEpochNum": 100,
  "MemoryUsageRatio": 0.99,
  "SaveGPUMemoryMode": false,
  "MinTokenFreqInVocab": 1,
  "ModelFilePath": "mt_enu_chs.model",
  "MultiHeadNum": 8,
  "NotifyEmail": "",
  "Optimizer": "Adam",
  "ProcessorType": "GPU",
  "TaskParallelism": 1,
  "SrcLang": "enu",
  "StartLearningRate": 0.0006,
  "ShuffleType": "NoPadding",
  "Task": "Train",
  "TooLongSequence": "Ignore",
  "TgtLang": "chs",
  "TrainCorpusPath": "./data/test",
  "UpdateFreq": 2,
  "ValBatchSize": 1600,
  "ValidCorpusPaths": "./data/test",
  "WarmUpSteps": 8000,
  "WeightsUpdateCount": 0,
  "SrcVocabSize": 60000,
  "TgtVocabSize": 60000,
  "LossType": "CrossEntropy",
  "RunValidEveryUpdates": 20000,
  "SrcVocab": "enu.vocab",
  "TgtVocab": "chs.vocab",
  "ActivateFunc": "Swish",
  "EnableTagEmbeddings": false           
}
